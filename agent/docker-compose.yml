services:
  # Neo4j Knowledge Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: jarvis-neo4j
    ports:
      - "7474:7474"  # Neo4j Browser
      - "7687:7687"  # Bolt protocol
    environment:
      NEO4J_AUTH: neo4j/jarvispassword
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_db_tx__log_rotation_retention__policy: "1 days"
      NEO4J_dbms_memory_heap_initial__size: "512m"
      NEO4J_dbms_memory_heap_max__size: "2G"
      NEO4J_dbms_memory_pagecache_size: "512m"
      # Enable APOC procedures
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_security_procedures_allowlist: "apoc.*"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - jarvis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "jarvispassword", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL Database (existing)
  postgres:
    image: postgres:15-alpine
    container_name: jarvis-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: jarvis
      POSTGRES_USER: jarvis
      POSTGRES_PASSWORD: jarvispassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jarvis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jarvis"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Jarvis API Service
  jarvis-api:
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: jarvis-api
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://jarvis:jarvispassword@postgres:5432/jarvis?sslmode=disable
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=jarvispassword
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - jarvis-network
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # For managing agent containers

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  postgres_data:
    driver: local

networks:
  jarvis-network:
    driver: bridge